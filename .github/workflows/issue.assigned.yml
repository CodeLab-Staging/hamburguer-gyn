name: Move Issue to In Progress on Assign

on:
  issues:
    types: [assigned]  # Aciona quando um assignee é adicionado a uma issue

permissions:
  contents: read
  issues: write
  projects: write

jobs:
  move_to_in_progress:
    runs-on: ubuntu-latest
    steps:
      - name: Move issue to In Progress
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.CODELAB_STAGING_TOKEN }}   # Use seu PAT aqui
          script: |
            const projectNumber = 2;
            const fieldName = "Status";
            const optionName = "In Progress";
            const orgName = "CodeLab-Staging";   # Nome da organização

            // 1. Obter ID do projeto
            const projectQuery = await github.graphql(`
              query($org: String!, $number: Int!) {
                organization(login: $org) {
                  projectV2(number: $number) {
                    id
                    title
                    fields(first: 20) {
                      nodes {
                        ... on ProjectV2Field {
                          id
                          name
                        }
                        ... on ProjectV2SingleSelectField {
                          id
                          name
                          options {
                            id
                            name
                          }
                        }
                      }
                    }
                  }
                }
              }
            `, {
              org: orgName,
              number: projectNumber
            });

            const projectId = projectQuery.organization.projectV2.id;
            console.log('✅ Project ID:', projectId);

            // 2. Encontrar o campo 'Status' e a opção 'In Progress'
            const field = projectQuery.organization.projectV2.fields.nodes.find(f => f.name === fieldName);
            if (!field) {
              throw new Error(`Field "${fieldName}" not found`);
            }

            const option = field.options.find(o => o.name === optionName);
            if (!option) {
              throw new Error(`Option "${optionName}" not found in field "${fieldName}"`);
            }

            // 3. Obter ID da issue
            const issueId = context.payload.issue.node_id;

            // 4. Atualizar o campo da issue no projeto
            const updateMutation = await github.graphql(`
              mutation($projectId: ID!, $itemId: ID!, $fieldId: ID!, $optionId: String!) {
                updateProjectV2ItemFieldValue(input: {
                  projectId: $projectId
                  itemId: $itemId
                  fieldId: $fieldId
                  value: {
                    singleSelectOptionId: $optionId
                  }
                }) {
                  projectV2Item {
                    id
                  }
                }
              }
            `, {
              projectId: projectId,
              itemId: issueId,
              fieldId: field.id,
              optionId: option.id
            });

            console.log('✅ Issue moved to "In Progress"!');